// src/app/barcode/page.tsx
"use client";
import React, { useEffect, useState } from "react";
import BarcodeScanner from "@/components/BarcodeScanner";
import { TextResult } from "dynamsoft-javascript-barcode/dist/types/interface/textresult";
import Head from "next/head";
import { Button } from "@/components/ui/button";

async function fetchLicense() {
  let license: string | undefined = process.env.DBRLicense;
  if (license === undefined) {
    license = "";
  }
  return license;
}

export default function Home() {
  const [isActive, setIsActive] = useState(false);
  const [initialized, setInitialized] = useState(false);
  const [license, setLicense] = useState<string>("");

  useEffect(() => {
    const loadLicense = async () => {
      const fetchedLicense = await fetchLicense();
      setLicense(fetchedLicense);
    };
    loadLicense();
  }, []);

  const toggleScanning = () => {
    setIsActive(!isActive);
  };

  const onScanned = (results: TextResult[]) => {
    if (results.length > 0) {
      let text = "";
      for (let index = 0; index < results.length; index++) {
        const result = results[index];
        text =
          text + result.barcodeFormatString + ": " + result.barcodeText + "\n";
      }
      alert(text);
      setIsActive(false);
    }
  };

  const onCloseScanner = () => {
    setIsActive(false);
  };

  return (
    <>
      <Head>
        <title>Next.js Barcode Scanner</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="app">
          <h2>Next.js Barcode Scanner</h2>
          {initialized ? (
            <>
              <Button onClick={toggleScanning} variant="primary">
                {isActive ? "Stop Scanning" : "Start Scanning"}
              </Button>
            </>
          ) : (
            <div>Initializing...</div>
          )}
          <div className="barcodeScanner">
            <BarcodeScanner
              license={license}
              onInitialized={() => setInitialized(true)}
              isActive={isActive}
              onScanned={(results) => onScanned(results)}
              onClose={onCloseScanner} // Pass onClose function here
            ></BarcodeScanner>
          </div>
        </div>
      </main>
    </>
  );
}
